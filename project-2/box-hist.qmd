# Boxplots and Histograms {.unnumbered}

## Box plots

To create a basic box and whisker plot, we use the `boxplot()` command. As per
usual, we define our data in a variable and then use that variable in the
`boxplot` function.

```{webr}
data = c(26, 16, 20, 21, 22, 21, 21, 22, 23, 16, 16, 24, 23, 20, 17, 21, 20, 15, 20, 20, 21, 23, 24, 24, 19, 16, 17, 23, 21, 20)
boxplot(data)
```

### Quartiles and Percentiles

Remember that the lines of the boxplot correspond to the quartiles (minimum,
25% mark, 50% mark, 75% mark, maximum). A related and quite useful function is
`summary()` which will print out all of these values as numbers for us.

```{webr}
summary(data)
```

Compare the output of this command to where the lines of boxplot are positioned.

### Textbook Data

Here are the numbers from pages 23 and 24 of the textbook for experimentation:

```{webr}
data23 = c(15, 24, 27, 31, 36, 37, 37, 38, 40, 41, 42, 43, 44, 45, 48, 50)
data24 = c(20, 21, 21, 27, 29, 30, 30, 32, 33, 38, 40, 41, 44, 46, 46, 48, 50, 50)

summary(data23)

quantile(data23, 0.2)

boxplot(data23, horizontal=TRUE)
```

## Histograms

Histograms are created with the `hist()` function. For instance

```{webr}
hist(data)
```

Unlike boxplots, we usually want to configure our histogram, i.e. set a number
of bins and/or declare the beginning and end of each bin.

We can do this by adding `breaks=...` to the end of our histogram function. And
the two most common types of breaks are to set a number of bins or to set where
the boundaries of those bins are.

```{webr}
hist(data, breaks=3) # setting breaks to a number makes that many bins

hist(data, breaks=c(0, 10, 20, 30)) # setting breaks to a list makes those the boundaries between bins
```

There is one more option we need to discuss which is the `right=FALSE` option.
By default, bins will include their right endpoint, so a bin that goes from
$10$ to $20$ will include every data point equal to $20$. Adding `right=FALSE`
moves all the $20$ data points into the next bin over (bins will include the
left point but not the right point). Compare:

```{webr}
hist(data, breaks=c(0, 10, 20, 30), right=FALSE)
```

There are $6$ data points equal to $20$. In the first histogram those $6$ count
for the middle bin, in the second histogram the count for the right bin.

### Textbook Data

Here is the data from page 37 of the textbook:

```{webr}
test_scores_M =
c(84, 88, 76, 44, 80, 83, 51,
  93, 69, 78, 49, 55, 78, 93,
  64, 84, 54, 92, 96, 72, 97,
  37, 97, 67, 83, 93, 95, 67,
  72, 67, 86, 76, 80, 58, 62,
  69, 64, 82, 48, 54, 80, 69)

test_scores_F =
c(59, 61, 74, 84, 86, 75,
  96, 92, 53, 66, 58, 49,
  71, 72, 73, 66, 91, 68,
  79, 79, 64, 84, 86, 79,
  88, 59, 98, 82, 69, 75)

hist(test_scores_M,
    breaks = c(30, 40, 50, 60, 70, 80, 90, 100),
    right = FALSE)
```

## Summary

| Type of visualization | R function | Useful for                                                      |
|-----------------------|------------|-----------------------------------------------------------------|
| Bar graph             | barplot()  | Comparing values between categories                             |
| Pie chart             | pie()      | Visualizing proportions                                         |
| Box-and-whisker       | boxplot()  | Visualizing the middle of and spread of generally unimodal data |
| Histogram             | hist()     | Visualizing the shape of the distribution                       |

: Types of Data Visualization {.striped}
